steps:
  - label: "{{matrix}}"
    matrix:
      - "Callbacks1"
      - "Callbacks2"
    env:
      GROUP: "{{matrix}}"
    plugins:
      - JuliaCI/julia#v1:
          version: "1.9"
      - JuliaCI/julia-test#v1:
          coverage: true
    agents:
      os: "linux"
      queue: "juliaecosystem"
      arch: "x86_64"
    timeout_in_minutes: 120
    # Don't run Buildkite if the commit message includes the text [skip tests]
    if: build.message !~ /\[skip tests\]/

  - label: "Shadowing"
    plugins:
      - JuliaCI/julia#v1:
          version: "1"
      - JuliaCI/julia-test#v1:
          coverage: true
          julia_args: "--threads=auto"
    agents:
      os: "linux"
      queue: "juliaecosystem"
      arch: "x86_64"
      exclusive: true
    env:
      GROUP: 'Shadowing'
    timeout_in_minutes: 120
    # Don't run Buildkite if the commit message includes the text [skip tests]
    if: build.message !~ /\[skip tests\]/

  - label: "Documentation"
    plugins:
      - JuliaCI/julia#v1:
          version: "1.9"
    command: |
      julia --project -e '
        println("--- :julia: Instantiating project")
        using Pkg
        Pkg.instantiate()
        Pkg.activate("docs")
        Pkg.instantiate()
        push!(LOAD_PATH, @__DIR__)
        println("+++ :julia: Building documentation")
        include("docs/make.jl")'
    agents:
      queue: "juliagpu"
      cuda: "*"
    env:
      DATADEPS_ALWAYS_ACCEPT: true
    if: build.message !~ /\[skip docs\]/ && !build.pull_request.draft
    timeout_in_minutes: 1000

  - label: "Julia 1"
    plugins:
      - JuliaCI/julia#v1:
          version: "1"
      - JuliaCI/julia-test#v1:
           coverage: false # 1000x slowdown
    agents:
      queue: "juliagpu"
      cuda: "*"
    env:
      GROUP: 'GPU'
    timeout_in_minutes: 60
    # Don't run Buildkite if the commit message includes the text [skip tests]
    if: build.message !~ /\[skip tests\]/

env:
  JULIA_PKG_SERVER: "" # it often struggles with our large artifacts
  SECRET_DOCUMENTER_KEY: "CZlK2ERrvOp4pGrTF2mB8S7q1s6uD4fM4AAHVxDSUQLSei+IzDFp6qriiBmIUUposM8On9wYzDTwkErdRRe/U9XsTIs/uKpoMSKAOZBNC7CjdXdJz9oa6xtKTQbJw+S+HEbsGnnz53Hg9bC9+U5npMiKvR0YDhnZDR025Htwqm5x8uzJNCdRviH4hss1+GMD6CgHqxzYPgpxiYX6ppPCN6BdIOrHPsxl5n923a1nwCW6oPfyGhxaC46VsB8qggk/tBIT+t0bw6btQblHSXBi3XAgKgPuPlvaaMlmv3Oxg/vkUNUIEN+8WE6w8iHav+5Yhboaloq+ovWCy+HP7M+HAg==;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"
